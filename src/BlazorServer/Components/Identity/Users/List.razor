@page "/users"

@using Light.Identity

@attribute [MustHavePermission(Permissions.Users.View)]

<Table State="state">
    <HeadContent>
        <th></th>
        <th>User</th>
        <th>Name</th>
        <th>Email</th>
        <th>Phone</th>
        <th>Status</th>
        <th>Action</th>
    </HeadContent>
    <RowTemplate>
        <td class="text-center">
            @if (!string.IsNullOrEmpty(context.AuthProvider))
            {
                <Badge Value="@context.AuthProvider" />
            }
        </td>
        <td>
            @context.UserName
        </td>
        <td>@context.FirstName @context.LastName</td>
        <td>@context.Email</td>
        <td>@context.PhoneNumber</td>
        <td>
            <Badge Value="@context.Status" Appearance="Appearance.Accent" />
        </td>
        <td>
            
        </td>

    </RowTemplate>
</Table>

@code {
    private DataTable<UserDto> state = null!;

    protected override async Task OnInitializedAsync()
    {
        state = new(UserService.GetAsync)
        {
            SearchFunc = (searchValue, e) =>
                e.UserName.Contains(searchValue, StringComparison.OrdinalIgnoreCase)
                || e.PhoneNumber.Contains(searchValue, StringComparison.OrdinalIgnoreCase)
                || e.Email.Contains(searchValue, StringComparison.OrdinalIgnoreCase)
        };

        await state.ReloadAsync();
    }
}
